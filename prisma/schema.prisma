generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProductStatus {
  AVAILABLE
  CANCELLED
  SOLD
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  phone     String    @unique
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")

  views    View[]
  products Product[]
  avatar   Attachment[]

  @@map("users")
}

model Product {
  id           String        @id @default(uuid())
  title        String
  description  String
  priceInCents Int           @map("price_in_cents")
  status       ProductStatus @default(AVAILABLE)
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime?     @map("updated_at")
  categoryId   String        @map("category_id")
  sellerId     String        @map("seller_id")

  seller   User     @relation(fields: [sellerId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  views       View[]
  attachments Attachment[]

  @@map("products")
}

model Category {
  id    String @id @default(uuid())
  title String
  slug  String

  products Product[]
}

model View {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  productId String   @map("product_id")
  viewerId  String   @map("viewer_id")

  viewer  User    @relation(fields: [viewerId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("views")
}

model Attachment {
  id        String  @id @default(uuid())
  title     String
  url       String
  productId String? @map("product_id")
  userId    String? @unique @map("user_id")

  user    User?    @relation(fields: [userId], references: [id])
  product Product? @relation(fields: [productId], references: [id])
}
